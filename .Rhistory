summary(default.mod)
dim(Default)
?cdplot
library(effects)
?Effect
plot(Effect("balance", default.glm))
plot(Effect("balance", default.mod))
cdplot(default ~ balance, data = Default)
myplot
cdplot(default ~ balance, data = Default)
## EDA
ibrary(car)
Chile$vote1 <- Chile$vote
Chile$vote1[Chile$vote1 == "A"] <- NA
Chile$vote1 <- ordered(Chile$vote1)
Chile$yes <- factor(with(Chile, ifelse(vote=="Y", "yes", ifelse(vote=="N", "no", NA))))
Chile$education <- factor(Chile$education, levels=c("P", "S", "PS"))
modb <- glm(yes ~ region + population + sex + age + education + income, family=binomial, data=Chile)
Anova(modb)
modb2 <- glm(yes ~ statusquo + region + population + sex + age + education + income, family=binomial, data=Chile)
Anova(modb2)
library(effects)
plot(allEffects(modb2), ask=FALSE)
library(car)
Chile$vote1 <- Chile$vote
Chile$vote1[Chile$vote1 == "A"] <- NA
Chile$vote1 <- ordered(Chile$vote1)
Chile$yes <- factor(with(Chile, ifelse(vote=="Y", "yes", ifelse(vote=="N", "no", NA))))
Chile$education <- factor(Chile$education, levels=c("P", "S", "PS"))
modb <- glm(yes ~ region + population + sex + age + education + income, family=binomial, data=Chile)
Anova(modb)
modb2 <- glm(yes ~ statusquo + region + population + sex + age + education + income, family=binomial, data=Chile)
Anova(modb2)
library(effects)
plot(allEffects(modb2), ask=FALSE)
?geom_jitter
qplot(x = balance, y = as.numeric(default) - 1, data = Default) +
geom_jitter(position = position_jitter(width = .1)) +
stat_smooth(method = "lm") +
ylab("Probability of Default")
qplot(x = balance, y = as.numeric(default) - 1, data = Default) +
geom_jitter(position = position_jitter(width = .001)) +
stat_smooth(method = "lm") +
ylab("Probability of Default")
qplot(x = balance, y = as.numeric(default) - 1, data = Default) +
geom_jitter(position = position_jitter(width = .000001))
qplot(x = balance, y = as.numeric(default) - 1, data = Default) +
geom_jitter(position = position_jitter(height = .1)) +
stat_smooth(method = "lm") +
ylab("Probability of Default")
testCollege <- read.table("~/Box Sync/Classes/Math 217/data/testCollege.txt", header=TRUE, quote="\"")
View(testCollege)
j <- readRDS("/Users/loya/Downloads/alexFirstTry.RDS")
preds <- predict(object = j, newdata = testCollege)
rpmse <- sqrt(mean((testCollege$Apps - preds)^2))
rpmse
source('~/.active-rstudio-document', echo=TRUE)
preds <- predict(default.mod)
prds
head(preds)
?predict.glm
preds.orig <- predict(default.mod, type = "response")
head(preds.orig)
exp(-6.639725)
with(Default, plot(x = balance, y = as.numeric(default)))
lines(x = balance, y = preds.orig)
lines(x = Default$balance, y = preds.orig)
lines(x = Default$balance, y = preds.orig/(1+preds.orig))
fitted(default.mod)
head(fitted(default.mod))
## example from Venables and Ripley (2002, pp. 190-2.)
ldose <- rep(0:5, 2)
numdead <- c(1, 4, 9, 13, 18, 20, 0, 2, 6, 10, 12, 16)
sex <- factor(rep(c("M", "F"), c(6, 6)))
SF <- cbind(numdead, numalive = 20-numdead)
budworm.lg <- glm(SF ~ sex*ldose, family = binomial)
summary(budworm.lg)
plot(c(1,32), c(0,1), type = "n", xlab = "dose",
ylab = "prob", log = "x")
text(2^ldose, numdead/20, as.character(sex))
ld <- seq(0, 5, 0.1)
lines(2^ld, predict(budworm.lg, data.frame(ldose = ld,
sex = factor(rep("M", length(ld)), levels = levels(sex))),
type = "response"))
lines(2^ld, predict(budworm.lg, data.frame(ldose = ld,
sex = factor(rep("F", length(ld)), levels = levels(sex))),
type = "response"))
with(Default, plot(x = balance, y = as.numeric(default)))
table(bayes.class, Default$default)
bayes.class <- preds.orig > .5
table(bayes.class, Default$default)
pct10.class <- preds.orig > .1
table(pct10.class, Default$default)
library(dplyr)
testdata <- read.table("~/Box Sync/Classes/Math 217/data/testCollege.txt", header=TRUE)
testdata <- mutate(testdata, Undergrad = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, Students = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, All.Undergrad = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, collegefull.cost = Room.Board + Books + Personal)
testdata <- mutate(testdata, Cost = Room.Board + Books + Personal)
testdata <- mutate(testdata, Expenditures = Room.Board + Books + Personal)
model <- readRDS(file.choose())
model
preds <- predict(model, newdata = testdata)
rpmse <- sqrt(mean((testdata$Apps - exp(preds))^2))
rpmse
dim(testdata)
exp(0.8448)
exp(.6362)
?spineplot
email <- read.csv("http://aloy.github.io/m217/data/email.csv")
head(email)
spineplot(spam ~ to_multiple, data = email)
spineplot(factor(spam) ~ to_multiple, data = email)
mod <- glm(spam ~ to_multiple, data = email)
mod
newdata <- data.frame(to_multiple = c("no", "yes"))
newdata
predict(mod, type = "response", newdata = newdata)
## Loading the necessary packages
library(ggplot2)
library(car)
library(arm)
## Load the empLogitPlot function from github
source("http://aloy.github.io/m217/rcode/empLogit.r")
## Loading the data set
lowbwt <- read.table("http://aloy.github.io/m217/data/lowbwt.txt", header = TRUE)
## logistic regression model for low bwt vs. age
sit3 <- glm(low ~ age, data = lowbwt, family = binomial)
## Wald test for the slope
summary(sit3)
## Likelihood ratio test for the slope
Anova(sit3)
## Profile CI for the slope
confint(sit3)
## Bootstrap CI for the slope
sit3.boot <- Boot(sit3, method = "case")
confint(sit3.boot, level = .9)
## Empirical logit plot
lowbwt$low.num <- as.numeric(lowbwt$low) - 1 # need a 0/1 response variable
with(lowbwt, empLogitPlot(x = age, y = low.num, nclass = 5))
## Binned residual plot of residuals vs. age (x)
binnedplot(x = lowbwt$age, y = resid(sit3))
## Binned residual plot of residuals vs. fitted values
binnedplot(x = fitted(sit3), y = resid(sit3))
residualPlot(sit3)
with(lowbwt, empLogitPlot(x = age, y = low.num))
wells <- read.table("http://aloy.github.io/m217/data/wells.dat")
head(wells)
51/33
library(dplyr)
testdata <- read.csv("~/Box Sync/Classes/Math 217/data/testAmesHousing.csv")
testdata <- subset(testdata, Roof.Matl != "Roll")
testdata <- subset(testdata, Kitchen.Qual != "Po")
testdata <- subset(testdata, Pool.QC != "TA")
testdata <- subset(testdata, Mas.Vnr.Type != "CBlock")
testdata <- subset(testdata, Exterior.1st != "PreCast")
testdata <- subset(testdata, Exterior.1st != "Stone")
model <- readRDS(file.choose())
model
preds <- predict(model, newdata = testdata)
rpmse <- sqrt(mean((testdata$SalePrice - preds)^2))
rpmse
.7*279
library(dplyr)
testdata <- read.table("~/Box Sync/Classes/Math 217/data/testCollege.txt", header=TRUE)
testdata <- mutate(testdata, Undergrad = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, Students = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, All.Undergrad = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, collegefull.cost = Room.Board + Books + Personal)
testdata <- mutate(testdata, Cost = Room.Board + Books + Personal)
testdata <- mutate(testdata, Expenditures = Room.Board + Books + Personal)
model <- readRDS(file.choose())
model <- readRDS(file.choose())
model <- readRDS(file.choose())
model
rpmse <- sqrt(mean((testdata$Apps - preds)^2))
rpmse
preds <- predict(model, newdata = testdata)
rpmse <- sqrt(mean((testdata$Apps - preds)^2))
rpmse
library(car)
residualPlots(model, type = "rstudent", pch=16)
model <- readRDS(file.choose())
model
preds <- predict(model, newdata = testdata)
rpmse <- sqrt(mean((testdata$Apps - preds)^2))
rpmse
residualPlots(model, type = "rstudent", pch=16)
model <- readRDS(file.choose())
model
preds <- predict(model, newdata = testdata)
rpmse <- sqrt(mean((testdata$Apps - preds)^2))
rpmse
residualPlots(model, type = "rstudent", pch=16)
model <- readRDS(file.choose())
model
preds <- predict(model, newdata = testdata)
rpmse <- sqrt(mean((testdata$Apps - exp(preds))^2))
rpmse
residualPlots(model, type = "rstudent", pch=16)
model
residualPlot(model = model,variable = "fitted")
residualPlot(model = model,variable = "Private", type="rstudent")
residualPlot(model = model,variable = "Top10perc", type="rstudent")
residualPlot(model = model,variable = "Room.Board", type="rstudent")
residualPlot(model = model,variable = "Expend", type="rstudent")
residualPlot(model = model,variable = "Accept", type="rstudent")
residualPlot(model = model,variable = "log(Accept)", type="rstudent")
av.plots(model)
model <- readRDS(file.choose())
model
preds <- predict(model, newdata = testdata)
rpmse <- sqrt(mean((testdata$Apps - exp(preds))^2))
rpmse
residualPlots(model, type = "rstudent", pch=16)
residualPlot(model = model,variable = "log(Expend)", type="rstudent")
residualPlot(model = model,variable = "log(Expend)", type="rstudent")
residualPlot(model = model,variable = "log(Enroll)", type="rstudent")
residualPlot(model = model,variable = "log(Accept)", type="rstudent")
residualPlot(model = model,variable = "I(Top10perc^0.5)", type="rstudent")
residualPlot(model = model,variable = "I(Cost^-0.5)", type="rstudent")
residualPlot(model = model,variable = "log(Students)", type="rstudent")
residualPlot(model = model,variable = "PhD", type="rstudent")
residualPlot(model = model,variable = "Private", type="rstudent")
residualPlot(model = model,variable = "Accept", type="rstudent")
residualPlot(model = model,variable = "Expend", type="rstudent")
residualPlot(model = model,variable = "Enroll", type="rstudent")
residualPlot(model = model,variable = "PrivateYes:Accept", type="rstudent")
residualPlot(model = model,variable = "Outstate", type="rstudent")
avPlotsmodel
avPlots(model)
16/20
trainAmesHousingadj1 <- trainAmesHousing[-c(8 ,  25 ,47  , 48,   49 ,  57 ,  58  , 63  , 85 , 105 , 108 , 111 ,130,131 , 14, 148 , 154 , 156,  176 , 179 , 204 , 207 , 211,  212,227 , 256, 282 , 289 , 291 , 294 , 302 , 323 , 333 , 359 , 361 ,372, 389 , 400 , 409 , 412 , 450), ]
testdata <- read.csv("~/Box Sync/Classes/Math 217/data/testAmesHousing.csv")
trainAmesHousingadj1 <- testdata[-c(8 ,  25 ,47  , 48,   49 ,  57 ,  58  , 63  , 85 , 105 , 108 , 111 ,130,131 , 14, 148 , 154 , 156,  176 , 179 , 204 , 207 , 211,  212,227 , 256, 282 , 289 , 291 , 294 , 302 , 323 , 333 , 359 , 361 ,372, 389 , 400 , 409 , 412 , 450), ]
trainAmesHousingadj1.lm<-lm(SalePrice~ Neighborhood+Bsmt.Qual+Gr.Liv.Area + Roof.Matl+ BsmtFin.SF.1+ Exter.Qual+Bsmt.Exposure+Condition.2+Overall.Cond +Total.Bsmt.SF +Bldg.Type+Year.Built + Screen.Porch + Garage.Cars + Sale.Condition+ Kitchen.Qual+ Pool.QC+ Mas.Vnr.Area + Condition.1+ Land.Contour+ Mas.Vnr.Type+ Exterior.1st+ Fireplace.Qu+  BsmtFin.SF.2+ BsmtFin.Type.1+ Fireplaces + Functional+ Lot.Area + Bedroom.AbvGr+ Wood.Deck.SF + Land.Slope+ TotRms.AbvGrd  + Kitchen.AbvGr + Garage.Area + Low.Qual.Fin.SF + Lot.Shape+  Full.Bath + Half.Bath + Mo.Sold + X3Ssn.Porch + Overall.Qual*Overall.Cond + Overall.Cond*Year.Built + Garage.Cars*Garage.Area + Land.Contour*Lot.Shape, data = trainAmesHousingadj1)
trainAmesHousingadj1.lm
trainAmesHousingorig.lm <- lm(SalePrice ~ MS.SubClass  +  MS.Zoning    +Lot.Frontage+    Lot.Area+  Street+	Alley+	Lot.Shape+	Land.Contour+	Utilities+	Lot.Config+	Land.Slope+	Neighborhood+	Condition.1+	Condition.2+	Bldg.Type+	House.Style+	Overall.Qual+	Overall.Cond+	Year.Built+	Year.Remod.Add+	Roof.Style+	Roof.Matl+	Exterior.1st+	Exterior.2nd+	Mas.Vnr.Type+	Mas.Vnr.Area+	Exter.Qual+	Exter.Cond+	Foundation+	Bsmt.Qual+	Bsmt.Cond+	Bsmt.Exposure+	BsmtFin.Type.1+	BsmtFin.SF.1+	BsmtFin.Type.2+	BsmtFin.SF.2+	Bsmt.Unf.SF+	Total.Bsmt.SF+	Heating+	Heating.QC+	Central.Air+	Electrical+	X1st.Flr.SF+	X2nd.Flr.SF+	Low.Qual.Fin.SF+	Gr.Liv.Area+	Bsmt.Full.Bath+	Bsmt.Half.Bath+	Full.Bath+	Half.Bath+	Bedroom.AbvGr+	Kitchen.AbvGr	+Kitchen.Qual+	TotRms.AbvGrd+	Functional+	Fireplaces+	Fireplace.Qu +	Garage.Type +	Garage.Finish +	Garage.Cars+	Garage.Area+	Garage.Qual+	Garage.Cond +	Paved.Drive+	Wood.Deck.SF+	Open.Porch.SF+	Enclosed.Porch+	X3Ssn.Porch+	Screen.Porch+	Pool.Area+	Pool.QC	+Fence+	Misc.Feature+	Misc.Val+	Mo.Sold+	Yr.Sold+	Sale.Type+	Sale.Condition+	SalePrice+	Garage.Age, data= trainAmesHousing)
ls()
traindata <- read.csv("~/Box Sync/Classes/Math 217/data/trainAmesHousing.csv")
trainAmesHousingorig.lm <- lm(SalePrice ~ MS.SubClass  +  MS.Zoning    +Lot.Frontage+    Lot.Area+  Street+	Alley+	Lot.Shape+	Land.Contour+	Utilities+	Lot.Config+	Land.Slope+	Neighborhood+	Condition.1+	Condition.2+	Bldg.Type+	House.Style+	Overall.Qual+	Overall.Cond+	Year.Built+	Year.Remod.Add+	Roof.Style+	Roof.Matl+	Exterior.1st+	Exterior.2nd+	Mas.Vnr.Type+	Mas.Vnr.Area+	Exter.Qual+	Exter.Cond+	Foundation+	Bsmt.Qual+	Bsmt.Cond+	Bsmt.Exposure+	BsmtFin.Type.1+	BsmtFin.SF.1+	BsmtFin.Type.2+	BsmtFin.SF.2+	Bsmt.Unf.SF+	Total.Bsmt.SF+	Heating+	Heating.QC+	Central.Air+	Electrical+	X1st.Flr.SF+	X2nd.Flr.SF+	Low.Qual.Fin.SF+	Gr.Liv.Area+	Bsmt.Full.Bath+	Bsmt.Half.Bath+	Full.Bath+	Half.Bath+	Bedroom.AbvGr+	Kitchen.AbvGr	+Kitchen.Qual+	TotRms.AbvGrd+	Functional+	Fireplaces+	Fireplace.Qu +	Garage.Type +	Garage.Finish +	Garage.Cars+	Garage.Area+	Garage.Qual+	Garage.Cond +	Paved.Drive+	Wood.Deck.SF+	Open.Porch.SF+	Enclosed.Porch+	X3Ssn.Porch+	Screen.Porch+	Pool.Area+	Pool.QC	+Fence+	Misc.Feature+	Misc.Val+	Mo.Sold+	Yr.Sold+	Sale.Type+	Sale.Condition+	SalePrice+	Garage.Age, data= trainAmesHousing)
trainAmesHousing <- read.csv("~/Box Sync/Classes/Math 217/data/trainAmesHousing.csv")
trainAmesHousingorig.lm <- lm(SalePrice ~ MS.SubClass  +  MS.Zoning    +Lot.Frontage+    Lot.Area+  Street+	Alley+	Lot.Shape+	Land.Contour+	Utilities+	Lot.Config+	Land.Slope+	Neighborhood+	Condition.1+	Condition.2+	Bldg.Type+	House.Style+	Overall.Qual+	Overall.Cond+	Year.Built+	Year.Remod.Add+	Roof.Style+	Roof.Matl+	Exterior.1st+	Exterior.2nd+	Mas.Vnr.Type+	Mas.Vnr.Area+	Exter.Qual+	Exter.Cond+	Foundation+	Bsmt.Qual+	Bsmt.Cond+	Bsmt.Exposure+	BsmtFin.Type.1+	BsmtFin.SF.1+	BsmtFin.Type.2+	BsmtFin.SF.2+	Bsmt.Unf.SF+	Total.Bsmt.SF+	Heating+	Heating.QC+	Central.Air+	Electrical+	X1st.Flr.SF+	X2nd.Flr.SF+	Low.Qual.Fin.SF+	Gr.Liv.Area+	Bsmt.Full.Bath+	Bsmt.Half.Bath+	Full.Bath+	Half.Bath+	Bedroom.AbvGr+	Kitchen.AbvGr	+Kitchen.Qual+	TotRms.AbvGrd+	Functional+	Fireplaces+	Fireplace.Qu +	Garage.Type +	Garage.Finish +	Garage.Cars+	Garage.Area+	Garage.Qual+	Garage.Cond +	Paved.Drive+	Wood.Deck.SF+	Open.Porch.SF+	Enclosed.Porch+	X3Ssn.Porch+	Screen.Porch+	Pool.Area+	Pool.QC	+Fence+	Misc.Feature+	Misc.Val+	Mo.Sold+	Yr.Sold+	Sale.Type+	Sale.Condition+	SalePrice+	Garage.Age, data= trainAmesHousing)
summary( trainAmesHousingorig.lm)
trainAmesHousing.lm <- lm(SalePrice ~ MS.SubClass  +  MS.Zoning    +Lot.Frontage+    Lot.Area+    Street+    Alley+    Lot.Shape+    Land.Contour+    Utilities+  Lot.Config+	Land.Slope+	Neighborhood+	Condition.1+	Condition.2+	Bldg.Type+	House.Style+	Overall.Qual+	Overall.Cond+	Year.Built+	Year.Remod.Add+	Roof.Style+	Roof.Matl+	Exterior.1st+	Exterior.2nd+	Mas.Vnr.Type+	Mas.Vnr.Area+	Exter.Qual+	Exter.Cond+	Foundation+	Bsmt.Qual+	Bsmt.Cond+	Bsmt.Exposure+	BsmtFin.Type.1+	BsmtFin.SF.1+	BsmtFin.Type.2+	BsmtFin.SF.2+	Bsmt.Unf.SF+	Total.Bsmt.SF+	Heating+	Heating.QC+	Central.Air+	Electrical+	X1st.Flr.SF+	X2nd.Flr.SF+	Low.Qual.Fin.SF+	Gr.Liv.Area+	Bsmt.Full.Bath+	Bsmt.Half.Bath+	Full.Bath+	Half.Bath+	Bedroom.AbvGr+	Kitchen.AbvGr	+Kitchen.Qual+	TotRms.AbvGrd+	Functional+	Fireplaces+	Fireplace.Qu +	Garage.Type +	Garage.Finish +	Garage.Cars+	Garage.Area+	Garage.Qual+	Garage.Cond +	Paved.Drive+	Wood.Deck.SF+	Open.Porch.SF+	Enclosed.Porch+	X3Ssn.Porch+	Screen.Porch+	Pool.Area+	Pool.QC	+Fence+	Misc.Feature+	Misc.Val+	Mo.Sold+	Yr.Sold+	Sale.Type+	Sale.Condition+	SalePrice+	Garage.Age+ MS.SubClass*MS.Zoning+ Lot.Frontage*Lot.Area+ Street*Alley+ Lot.Shape*Land.Contour+ Land.Slope*Land.Contour+ Overall.Qual*Overall.Cond+ Overall.Cond*Year.Built+ Overall.Cond*Year.Remod.Add+ Roof.Style*Year.Built+ Exterior.1st*Exterior.2nd+ Exter.Qual*Exter.Cond+Foundation*Bsmt.Cond+Bsmt.Unf.SF*Total.Bsmt.SF+ Heating*Heating.QC+X1st.Flr.SF*X2nd.Flr.SF+Kitchen.AbvGr*Kitchen.Qual+Garage.Age*Garage.Finish+ Garage.Cars*Garage.Area+Garage.Qual*Garage.Cond+ Enclosed.Porch*Screen.Porch+ Misc.Feature*Misc.Val, data= trainAmesHousing)
trainAmesHousingadj1.lm<-lm(SalePrice~ Neighborhood+Bsmt.Qual+Gr.Liv.Area + Roof.Matl+ BsmtFin.SF.1+ Exter.Qual+Bsmt.Exposure+Condition.2+Overall.Cond +Total.Bsmt.SF +Bldg.Type+Year.Built + Screen.Porch + Garage.Cars + Sale.Condition+ Kitchen.Qual+ Pool.QC+ Mas.Vnr.Area + Condition.1+ Land.Contour+ Mas.Vnr.Type+ Exterior.1st+ Fireplace.Qu+  BsmtFin.SF.2+ BsmtFin.Type.1+ Fireplaces + Functional+ Lot.Area + Bedroom.AbvGr+ Wood.Deck.SF + Land.Slope+ TotRms.AbvGrd  + Kitchen.AbvGr + Garage.Area + Low.Qual.Fin.SF + Lot.Shape+  Full.Bath + Half.Bath + Mo.Sold + X3Ssn.Porch + Overall.Qual*Overall.Cond + Overall.Cond*Year.Built + Garage.Cars*Garage.Area + Land.Contour*Lot.Shape, data = trainAmesHousingadj1)
trainAmesHousingadj1 <- trainAmesHousing[-c(8 ,  25 ,47  , 48,   49 ,  57 ,  58  , 63  , 85 , 105 , 108 , 111 ,130,131 , 14, 148 , 154 , 156,  176 , 179 , 204 , 207 , 211,  212,227 , 256, 282 , 289 , 291 , 294 , 302 , 323 , 333 , 359 , 361 ,372, 389 , 400 , 409 , 412 , 450 , 465 , 467  ,471 , 472 ,473 , 483,  497, 500 , 502 , 506 , 525 , 527 , 534 , 579 , 583 ,593,  613,  627 , 629 ,645 , 646 , 660 , 661 , 662 , 669 ,671 , 683 , 689 , 697 , 735 , 737 ,753 , 755 , 758 , 766 , 768 ,770,  774 , 785 , 786 , 787 , 790 , 793 ,797 , 800 , 802 ,804 , 808, 829 , 833 , 839 , 874 , 881 , 921 , 922 ,923 , 928 ,936 , 943 , 959 , 978 , 993, 1005, 1012, 1035, 1044, 1048 ,1065, 1076, 1083, 1086, 1107 ,1112 ,1114 ,1128, 1137, 1150, 1153, 1154, 1158, 1159 ,1206 ,1229 ,1231 ,1232 ,1241 ,1243, 1244, 1253 ,1262 ,1283 ,1317 ,1329 ,1332 ,1339 ,1345 ,1365 ,1391, 1392 ,1397 ,1398 ,1400 ,1418 ,1423 ,1432 ), ]
trainAmesHousingadj2<-subset(trainAmesHousingadj1, BsmtFin.Type.1 != "NB", Bsmt.Exposure != "NB")
trainAmesHousingadj1.lm<-lm(SalePrice~ Neighborhood+Bsmt.Qual+Gr.Liv.Area + Roof.Matl+ BsmtFin.SF.1+ Exter.Qual+Bsmt.Exposure+Condition.2+Overall.Cond +Total.Bsmt.SF +Bldg.Type+Year.Built + Screen.Porch + Garage.Cars + Sale.Condition+ Kitchen.Qual+ Pool.QC+ Mas.Vnr.Area + Condition.1+ Land.Contour+ Mas.Vnr.Type+ Exterior.1st+ Fireplace.Qu+  BsmtFin.SF.2+ BsmtFin.Type.1+ Fireplaces + Functional+ Lot.Area + Bedroom.AbvGr+ Wood.Deck.SF + Land.Slope+ TotRms.AbvGrd  + Kitchen.AbvGr + Garage.Area + Low.Qual.Fin.SF + Lot.Shape+  Full.Bath + Half.Bath + Mo.Sold + X3Ssn.Porch + Overall.Qual*Overall.Cond + Overall.Cond*Year.Built + Garage.Cars*Garage.Area + Land.Contour*Lot.Shape, data = trainAmesHousingadj2)
summary(trainAmesHousingadj2)
data$Bsmt.Qual <- data$Bsmt.Qual  %in% c("Gd", "Ex")
data$Bsmt.Qual <- data$Bsmt.Qual %in% c("Gd", "Ex")
trainAmesHousing$Bsmt.Qual <- trainAmesHousing$Bsmt.Qual %in% c("Gd", "Ex")
summary(trainAmesHousingadj2)
summary(trainAmesHousing)
library(dplyr)
testdata <- read.csv("~/Box Sync/Classes/Math 217/data/testAmesHousing.csv")
testdata <- subset(testdata, Roof.Matl != "Roll")
testdata <- subset(testdata, Kitchen.Qual != "Po")
testdata <- subset(testdata, Pool.QC != "TA")
testdata <- subset(testdata, Mas.Vnr.Type != "CBlock")
testdata <- subset(testdata, Exterior.1st != "PreCast")
testdata <- subset(testdata, Exterior.1st != "Stone")
model <- readRDS(file.choose())
model
preds <- predict(model, newdata = testdata)
testdata <- subset(testdata, Bsmt.Qual != "Po")
preds <- predict(model, newdata = testdata)
testdata <- subset(testdata, Condition.2 != "Artery")
testdata <- subset(testdata, Condition.2 != "PosN")
preds <- predict(model, newdata = testdata)
testdata <- subset(testdata, Condition.1 != "RRNe")
testdata <- subset(testdata, Condition.1 != "RRNn")
preds <- predict(model, newdata = testdata)
testdata <- subset(testdata, Mas.Vnr.Type != "BrkCmn")
preds <- predict(model, newdata = testdata)
testdata <- subset(testdata, Exterior.1st != "Exterior.1st")
testdata <- subset(testdata, Exterior.1st != "BrkCmn")
preds <- predict(model, newdata = testdata)
testdata <- subset(testdata, Exterior.1st != "AsphShn")
testdata <- subset(testdata, Exterior.1st != "BrkComm")
preds <- predict(model, newdata = testdata)
testdata <- subset(testdata, Land.Slope != "Sev")
preds <- predict(model, newdata = testdata)
testdata <- subset(testdata, Lot.Shape != "IR3")
preds <- predict(model, newdata = testdata)
head(preds)
model
rpmse <- sqrt(mean((testdata$SalePrice - preds)^2))
rpmse
model <- readRDS(file.choose())
model
model <- readRDS(file.choose())
model
preds <- predict(model, newdata = testdata)
testdata <- subset(testdata, Heating != "OthW")
preds <- predict(model, newdata = testdata)
testdata <- subset(testdata, Electrical != "Mix")
preds <- predict(model, newdata = testdata)
testdata <- subset(testdata, Electrical != " ")
preds <- predict(model, newdata = testdata)
levels(testdata$Electrical)
testdata <- subset(testdata, Electrical != "")
preds <- predict(model, newdata = testdata)
testdata <- subset(testdata, Misc.Feature != "Elev")
preds <- predict(model, newdata = testdata)
testdata <- subset(testdata, Sale.Type != "VWD")
preds <- predict(model, newdata = testdata)
preds
rpmse <- sqrt(mean((testdata$SalePrice - preds)^2))
rpmse
model <- readRDS(file.choose())
model
preds <- predict(model, newdata = testdata)
rpmse <- sqrt(mean((testdata$SalePrice - preds)^2))
rpmse
testdata <- read.table("~/Box Sync/Classes/Math 217/data/testCollege.txt", header=TRUE)
testdata <- mutate(testdata, Undergrad = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, Students = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, All.Undergrad = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, collegefull.cost = Room.Board + Books + Personal)
testdata <- mutate(testdata, Cost = Room.Board + Books + Personal)
testdata <- mutate(testdata, Expenditures = Room.Board + Books + Personal)
model <- readRDS(file.choose())
testdata <- read.table("~/Box Sync/Classes/Math 217/data/testCollege.txt", header=TRUE)
testdata <- mutate(testdata, Undergrad = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, Students = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, All.Undergrad = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, collegefull.cost = Room.Board + Books + Personal)
testdata <- mutate(testdata, Cost = Room.Board + Books + Personal)
testdata <- mutate(testdata, Expenditures = Room.Board + Books + Personal)
model <- readRDS(file.choose())
?predict.lm
?xtabs
esoph
xtabs(cbind(ncases, ncontrols) ~ ., data = esoph)
library(makeRV)
install.packages("makeRV")
install.packages("discreteRV")
library(discreteRV)
?discreteRV
help(package=discreteRV)
(X <- RV(outcomes = 1:8, probs = c(1/8, 5/8, 0, 0, 1/4, 0, 0, 0))
)
X
rsim(X = X, n = 375)
sim <- rsim(X = X, n = 375)
table(sim)
sim <- rsim(X = X, n = 375)
sim
sim <- rsim(X = X, n = 375)
sim <- rsim(X = X, n = 375); sim
sim <- rsim(X = X, n = 375); table(sim)
sim <- rsim(X = X, n = 375); table(sim)
sim <- rsim(X = X, n = 375); table(sim)
sim <- rsim(X = X, n = 375); table(sim)
sim <- rsim(X = X, n = 375); table(sim)
sim <- rsim(X = X, n = 375); table(sim)
sim <- rsim(X = X, n = 375); table(sim)
sim <- rsim(X = X, n = 375); table(sim)
sim <- rsim(X = X, n = 375); table(sim)
sim <- rsim(X = X, n = 375); table(sim)
sim <- rsim(X = X, n = 375); table(sim)
sim <- rsim(X = X, n = 375); table(sim)
sim <- rsim(X = X, n = 375); table(sim)
rsim
plot(sim)
X
class(X)
print.RV
discreteRV::print.RV
discreteRV:::print.RV
methods("print")
library(dplyr)
testdata <- read.table("~/Box Sync/Classes/Math 217/data/testCollege.txt", header=TRUE)
testdata <- mutate(testdata, Undergrad = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, Students = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, All.Undergrad = F.Undergrad + P.Undergrad)
testdata <- mutate(testdata, collegefull.cost = Room.Board + Books + Personal)
testdata <- mutate(testdata, Cost = Room.Board + Books + Personal)
testdata <- mutate(testdata, Expenditures = Room.Board + Books + Personal)
model <- readRDS(file.choose())
model
preds <- predict(model, newdata = testdata)
rpmse <- sqrt(mean((testdata$Apps - exp(preds))^2))
rpmse <- sqrt(mean((testdata$Apps - preds)^2))
rpmse
library(car)
residualPlots(model, type = "rstudent", pch=16)
avPlots(model)
14/14
14/15
library("AER", lib.loc="~/Library/R/3.1/library")
head(AES)
data(AES)
head(AEs)
data(Affairs)
head(Affairs)
table(Affairs$occupation)
library(faraway)
install.packages("faraway")
library(faraway)
?pulp
?PlantGrowth
boxplot(weight ~ group, data = PlantGrowth, main = "PlantGrowth data",
ylab = "Dried weight of plants", col = "lightgray",
notch = TRUE, varwidth = TRUE)
anova(lm(weight ~ group, data = PlantGrowth))
# Task 1: Import the data set
tweets <- read.delim("~/Desktop/USCOTS-workshop/USCOTS Flipped Data Science Workshop - Tweets.txt", header=FALSE)
colnames(tweets) <- c("userID", "tweetID", "date_time", "no_retweeted", "text")
# Task 2: Identify most retweeted message
rid <- which.max(tweets$no_retweeted); rid
tweets[rid,]
# Task 3: Proportion of tweets that were retweeted
mean(tweets$no_retweeted > 0)
# Task 4: calculate the avg. no. of retweets per user
#         and explore the distribution of number of retweets.
library(dplyr)
grouped <- group_by(tweets, userID)
retweet_user <- summarise(grouped, avg = mean(no_retweeted))
head(retweet_user)
library(ggplot2)
summary(tweets$no_retweeted)
qplot(no_retweeted, data = tweets, fill = I("gray"), colour = I("black")) +
scale_x_log10()
summary(retweet_user$avg)
qplot(avg, data = retweet_user, fill = I("gray"), colour = I("black"))
qplot(avg, data = retweet_user, fill = I("gray"), colour = I("black")) +
scale_x_log10()
# Task 5:  Identify at least two topic areas found in the text of
#          these tweets (for example, many of the tweets discuss sports).
library(tm)
library(wordcloud)
myCorpus <- Corpus(VectorSource(tweets$text))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
myCorpus <- tm_map(myCorpus, removePunctuation)
myCorpus <- tm_map(myCorpus, removeNumbers)
myCorpus <- tm_map(myCorpus, removeWords, stopwords("SMART"))
myDTM <- TermDocumentMatrix(myCorpus, control = list(minWordLength = 1))
m <- as.matrix(myDTM)
sorted <- sort(rowSums(m), decreasing = TRUE)
?wordcloud
head(m)
sorted <- sort(rowSums(m), decreasing = TRUE)
head(sorted)
myCorpus <- Corpus(VectorSource(tweets$text))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
myCorpus <- tm_map(myCorpus, removePunctuation)
myCorpus <- tm_map(myCorpus, removeNumbers)
myCorpus <- tm_map(myCorpus, removeWords, stopwords("SMART"))
myDTM <- TermDocumentMatrix(myCorpus, control = list(minWordLength = 1))
m <- as.matrix(myDTM)
sorted <- sort(rowSums(m), decreasing = TRUE)
head(sorted)
sorted
wordcloud(names(sorted), freq = sorted)
35/40
36/40
32.40
32/40
33/40
32/40
ls()
head(tweets)
rid <- which.max(tweets$no_retweeted); rid
tweets[rid,]
mean(tweets$no_retweeted > 0)
dir()
grouped <- group_by(tweets, userID)
retweet_user <- summarise(grouped, avg = mean(no_retweeted))
head(retweet_user)
head(arrange(retweet_user, avg))
head(arrange(retweet_user, -avg))
stopwords("SMART")
head(sorted)
head(sorted, 20)
mean(tweets$no_retweeted > 0)
summary(tweets)
qplot(no_retweeted, data = tweets, fill = I("gray"), colour = I("black")) +
scale_x_log10()
qplot(no_retweeted, data = tweets, fill = I("gray"), colour = I("black"))
qplot(no_retweeted, data = tweets, fill = I("gray"), colour = I("black")) +
scale_x_log10()
sum(tweets$no_retweeted > 0)
tweets[rid,]
.061/.024
sqrt(.5^2 / 428)
.527+C(1,-1)*2*.046
.527+c(1,-1)*2*.046
.527+c(-1,1)*1.675*.046
.341/sqrt(53)
.527+c(-1,1)*1.675*.047
shiny::runApp('Documents/Research/SURE2015/silly')
shiny_bind
library(ggvis)
?shiny_bind
?bing_shiny
?bind_shiny
?bootstrapPage
summarise(grouped_trials, mean = mean(Time), ratio = mean[1] / mean[2])
mtcars
apply(mtcars, 2, class)
apply(mtcars, 2, is.numeric)
colnames[apply(mtcars, 2, is.numeric)]
colnames(mtcars)[apply(mtcars, 2, is.numeric)]
colnames(mtcars)[apply(mtcars, 2, is.factor)]
setwd("~/Documents/probability-r")
installGitbook()
library(Rgitbook)
installGitbook()
